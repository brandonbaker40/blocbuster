require 'rails_helper'
require 'httparty'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.
#
# Also compared to earlier versions of this generator, there are no longer any
# expectations of assigns and templates rendered. These features have been
# removed from Rails core in Rails 5, but can be added back in via the
# `rails-controller-testing` gem.

RSpec.describe TvShowsController, type: :controller do

  # This should return the minimal set of attributes required to create a valid
  # TvShow. As you add validations to TvShow, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) {
    {
      "backdrop_path": "/jC1KqsFx8ZyqJyQa2Ohi7xgL7XC.jpg",
      "created_by": [
        {
          "id": 211962,
          "credit_id": "537523f9c3a3681ef4000177",
          "name": "Geoff Johns",
          "gender": 2,
          "profile_path": "/1hiQjkIkeFoiwvD4yIk2Dq6tnOa.jpg"
        },
        {
          "id": 1216615,
          "credit_id": "5bd5a45ec3a36820f002e57f",
          "name": "Andrew Kreisberg",
          "gender": 2,
          "profile_path": "/giFmwdBAw6uwC8yeHPaW6dq6YT8.jpg"
        },
        {
          "id": 88967,
          "credit_id": "5bd5a46d0e0a2622bd02be75",
          "name": "Greg Berlanti",
          "gender": 2,
          "profile_path": "/AbocIYSo4KXx7nT6lz2dj3qMD8H.jpg"
        }
      ],
      "episode_run_time": [
        44
      ],
      "first_air_date": "2014-10-07",
      "genres": [
        {
          "id": 18,
          "name": "Drama"
        },
        {
          "id": 10765,
          "name": "Sci-Fi & Fantasy"
        }
      ],
      "homepage": "http://www.cwtv.com/shows/the-flash/",
      "id": 60735,
      "in_production": true,
      "languages": [
        "en"
      ],
      "last_air_date": "2019-01-15",
      "last_episode_to_air": {
        "air_date": "2019-01-15",
        "episode_number": 10,
        "id": 1629007,
        "name": "The Flash & The Furious",
        "overview": "While Nora grapples with the revelation that Thawne killed her grandmother, Team Flash must stop the formidable team-up of a newly sprung from jail Weather Witch and Silver Ghost, a new meta-tech villain who can control engines and motorized technology. Meanwhile, Caitlin and Cisco discuss creating a meta-human cure.",
        "production_code": "",
        "season_number": 5,
        "show_id": 60735,
        "still_path": "/rX7ztaeuUokOs8BJfE3U17MKDJU.jpg",
        "vote_average": 0,
        "vote_count": 0
      },
      "name": "The Flash",
      "next_episode_to_air": {
        "air_date": "2019-01-22",
        "episode_number": 11,
        "id": 1666783,
        "name": "Seeing Red",
        "overview": "During a battle with Cicada, Nora is severely injured. Due to Cicada's dampening powers, Nora's speed healing isn't working, leaving Barry and Iris scared for their daughter's future. Upset about his injured child, The Flash is filled with rage and confronts Cicada in a brutal battle. Meanwhile, Killer Frost keeps interfering with Caitlin's work on the cure.",
        "production_code": "",
        "season_number": 5,
        "show_id": 60735,
        "still_path": "/byRXCsqAm4BdTaepm1rgLKfwHIn.jpg",
        "vote_average": 0,
        "vote_count": 0
      },
      "networks": [
        {
          "name": "The CW",
          "id": 71,
          "logo_path": "/ge9hzeaU7nMtQ4PjkFlc68dGAJ9.png",
          "origin_country": "US"
        }
      ],
      "number_of_episodes": 105,
      "number_of_seasons": 5,
      "origin_country": [
        "US"
      ],
      "original_language": "en",
      "original_name": "The Flash",
      "overview": "After a particle accelerator causes a freak storm, CSI Investigator Barry Allen is struck by lightning and falls into a coma. Months later he awakens with the power of super speed, granting him the ability to move through Central City like an unseen guardian angel. Though initially excited by his newfound powers, Barry is shocked to discover he is not the only \"meta-human\" who was created in the wake of the accelerator explosion -- and not everyone is using their new powers for good. Barry partners with S.T.A.R. Labs and dedicates his life to protect the innocent. For now, only a few close friends and associates know that Barry is literally the fastest man alive, but it won't be long before the world learns what Barry Allen has become...The Flash.",
      "popularity": 256.566,
      "poster_path": "/fki3kBlwJzFp8QohL43g9ReV455.jpg",
      "production_companies": [
        {
          "id": 1957,
          "logo_path": "/nmcNfPq03WLtOyufJzQbiPu2Enc.png",
          "name": "Warner Bros. Television",
          "origin_country": "US"
        },
        {
          "id": 27711,
          "logo_path": "/3e294jszfE6cE8TOogmj0zNd6pL.png",
          "name": "Berlanti Productions",
          "origin_country": "US"
        },
        {
          "id": 9993,
          "logo_path": "/2Tc1P3Ac8M479naPp1kYT3izLS5.png",
          "name": "DC Entertainment",
          "origin_country": "US"
        },
        {
          "id": 105514,
          "logo_path": nil,
          "name": "Mad Ghost Productions",
          "origin_country": "US"
        }
      ],
      "seasons": [
        {
          "air_date": "2016-04-19",
          "episode_count": 5,
          "id": 79954,
          "name": "Specials",
          "overview": "",
          "poster_path": "/hce9A21ANLi4n9QtBZEdPFD2eZk.jpg",
          "season_number": 0
        },
        {
          "air_date": "2014-10-07",
          "episode_count": 23,
          "id": 60523,
          "name": "Season 1",
          "overview": "",
          "poster_path": "/nOUQ03eFsbvSbQB235YrBRuo00.jpg",
          "season_number": 1
        },
        {
          "air_date": "2015-10-06",
          "episode_count": 23,
          "id": 66922,
          "name": "Season 2",
          "overview": "Following the dramatic events of season 1, Team Flash quickly turns their attention to a threat high above Central City. Armed with the heart of a hero and the ability to move at super speeds, will Barry be able to save his city from impending doom?",
          "poster_path": "/pZE6s1yo668pWg7LG4r7TSWnSXG.jpg",
          "season_number": 2
        },
        {
          "air_date": "2016-10-04",
          "episode_count": 23,
          "id": 77888,
          "name": "Season 3",
          "overview": "",
          "poster_path": "/qxagPKSYMhyGEgWLkC1NG43uWeN.jpg",
          "season_number": 3
        },
        {
          "air_date": "2017-10-10",
          "episode_count": 23,
          "id": 90247,
          "name": "Season 4",
          "overview": "",
          "poster_path": "/zBF3wcUp3SgnlYNOXQeaDg5XfTu.jpg",
          "season_number": 4
        },
        {
          "air_date": "2018-10-09",
          "episode_count": 13,
          "id": 104777,
          "name": "Season 5",
          "overview": "",
          "poster_path": "/z3CqL2vnjgLuefOiR5AYD9Tf91S.jpg",
          "season_number": 5
        }
      ],
      "status": "Returning Series",
      "type": "Scripted",
      "vote_average": 6.7,
      "vote_count": 2456
    }
  }

  describe "valid attributes for the flash" do
    it "should match these attributes" do
      expect(valid_attributes[:name]).to eq "The Flash"
      expect(valid_attributes[:id]).to eq 60735
      expect(valid_attributes[:created_by][0][:name]).to eq "Geoff Johns"
      expect(valid_attributes[:networks][0][:name]).to eq "The CW"
    end
  end

  # let(:invalid_attributes) {
  #   skip("Add a hash of attributes invalid for your model")
  # }

  let(:valid_session) { {} }

  describe "GET #index" do
    it "returns a success response" do
      get :index, params: {}, session: valid_session
      expect(response).to be_successful
    end
  end

  describe "GET #show" do
    it "returns a success response" do
      tv_show = valid_attributes
      # get :show, params: {id: tv_show[:id]}, session: valid_session
      expect(response).to be_successful
    end
  end
end
